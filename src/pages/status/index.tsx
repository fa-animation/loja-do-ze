import { StatusHeading } from "@/component/Status/StatusHeading";
import { StatusService } from "@/component/Status/StatusService";
import { siteStatus } from "@/utils";
import {
  Box, Container, Heading,
  Text, Badge
} from "@chakra-ui/react"
import getConfig from "next/config";
import Head from "next/head";
const { publicRuntimeConfig } = getConfig()

export default function StatusPage() {
  const services = [
    { name: 'API', status: 'Problemas de desempenho', color: 'blue.400' },
    { name: 'CDN', status: 'Operacional', color: 'green.400' },
    { name: 'Processador de pagamento', status: 'Operacional', color: 'green.400' },
    { name: 'Website', status: 'Operacional', color: 'green.400' },
  ];

  const renderIssues = () => {
    return siteStatus.issues.map((issue) => (
      <Box key={issue.id} p={2} borderRadius="md" bg="gray.700" color={"white"} mt={3}>
        <Text fontSize="md" fontWeight="bold" mb={1}>
          {issue.title}
        </Text>
        <Badge colorScheme={issue.status === 'Resolvido' ? 'green' : 'red'}>
          {issue.status}
        </Badge>
      </Box>
    ));
  };
  return (
    <>
      <Head>
        <title>Loja do zé - Status page</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container maxW={'7xl'} p={7} mt={20}>
        <Heading
          textAlign={"center"}
          fontWeight="semibold"
          textTransform="uppercase"
          letterSpacing="wider"
          mb={1}
        >
          Status site do zé
        </Heading>
        <Box bg="gray.700" mb={2} p={2}>
          <StatusHeading
            message={siteStatus.message}
            status={siteStatus.status}
            uptime={siteStatus.uptime}
          />
          {services.map((service) => {
            return (
              <StatusService
                color={service.color}
                name={service.name}
                status={service.status}
                key={service.name}
              />
            )
          })}
        </Box>
        <Box mb={3}>
          <Text>
            Ultimas alterações
          </Text>
          <Box color="white" mt={3} bg="gray.700" p={3} borderLeftWidth="16px" borderLeftColor="purple.500" padding="7px" borderRadius="4px" >
            <Box display="flex" justifyContent={"space-between"}>
              <Text>
                <strong>Autor: {publicRuntimeConfig.author}</strong>
              </Text>
              <Badge bg={"#2f5888"}>GITHUB</Badge>
            </Box>
            <Box>
              <Text>Ultimo commit: {publicRuntimeConfig.message}</Text>
              <Text>hash: {publicRuntimeConfig.message_sha}</Text>
            </Box>
          </Box>
        </Box>
        <Box w="100%">
          <Text fontSize="lg">Problemas recentes:</Text>
          {renderIssues()}
        </Box>
      </Container>
    </>
  )
}
